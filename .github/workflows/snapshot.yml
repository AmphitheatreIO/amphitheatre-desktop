name: Snapshot

env:
  APP_NAME: Amphitheatre Desktop
  PACKAGE_NAME: Amphitheatre-Desktop

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    paths-ignore:
      - '*.md'
      - '.github/ISSUE_TEMPLATE/**'
      - .github/PULL_REQUEST_TEMPLATE.md    
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - '*.md'
      - '.github/ISSUE_TEMPLATE/**'
      - .github/PULL_REQUEST_TEMPLATE.md    

# Declare default permissions as read only.
permissions: read-all

jobs:
  build:
    name: Create on ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [macOS, Windows, Linux]
        include:
          - os: macos-latest
            target: macOS
            build_target: macos
            build_path: build/macos/Build/Products/Release
            asset_extension: .zip
            asset_content_type: application/zip
          - os: windows-latest
            target: Windows
            build_target: windows
            build_path: build\windows\runner\Release
            asset_extension: .zip
            asset_content_type: application/zip
          - os: ubuntu-latest
            target: Linux
            build_target: linux
            build_path: build/linux/x64/release/bundle
            asset_extension: .tar.gz
            asset_content_type: application/gzip
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@v2
        with:
          channel: master

      - name: Install Linux dependencies.
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
      - name: Enable desktop support
        run: |
          flutter config --enable-macos-desktop
          flutter config --enable-windows-desktop
          flutter config --enable-linux-desktop
      - run: flutter doctor -v

      # Checkout code, recreate missing files, and get packages.
      - name: Checkout code
        uses: actions/checkout@v3
      - run: flutter create .
      - run: flutter pub get

      - name: Run code generation
        run: flutter pub run build_runner build      

      # Build the application.
      - run: flutter build -v ${{ matrix.build_target }} --release

      # Package the build.

      # Build macOS
      - name: Compress build for macOS
        if: matrix.target == 'macOS'
        run: ditto -c -k --sequesterRsrc --keepParent ${{ env.APP_NAME }}.app $GITHUB_WORKSPACE/${{ env.PACKAGE_NAME }}-${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      # Build Windows
      - name: Copy VC redistributables to release directory for Windows
        if: matrix.target == 'Windows'
        run: |
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\msvcp140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140_1.dll') .
        working-directory: ${{ matrix.build_path }}

      - name: Compress build for Windows
        if: matrix.target == 'Windows'
        run: compress-archive -Path * -DestinationPath ${env:GITHUB_WORKSPACE}\${{ env.PACKAGE_NAME }}-${{ matrix.target }}.zip
        working-directory: ${{ matrix.build_path }}

      # Build Linux
      - name: Compress build for Linux
        if: matrix.target == 'Linux'
        run: tar czf $GITHUB_WORKSPACE/${{ env.PACKAGE_NAME }}-${{ matrix.target }}.tar.gz *
        working-directory: ${{ matrix.build_path }}

      # Upload the build.
      - name: Upload packaged build to artifacts.
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}-${{ matrix.target }}-Bundle
          path: ./${{ env.PACKAGE_NAME }}-${{ matrix.target }}${{ matrix.asset_extension }}